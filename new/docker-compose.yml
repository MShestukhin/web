version: '3'

services:
### NGINX Server #########################################
    nginx:
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php
    #   networks:
    #     - frontend
    #     - backend    
    php:
        # у нас свой образ для PHP, указываем путь к нему и говорим что его надо собрать
        build: ./images/php
        # этот образ будет общаться с mysql
        depends_on:
            - postgres
        # монтируем директорию с проектами
        volumes:
            - ./www:/var/www
    ### PostgreSQL ###########################################
    postgres:
        build: ./postgres
        volumes:
        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
        ports:
        - "${POSTGRES_PORT}:5432"
        environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        # networks:
        #   - backend
### Node #########################################
    node:
        build: ./node
        volumes:
        - ./www:/var/www
        ports:
        - "4321:4321"
        environment:
        - "USER_GID=1001"
        - "USER=1001"
        depends_on: 
        - postgres
        # networks:
        #   - docker_app-network
        # expose:
        #   - "9000"